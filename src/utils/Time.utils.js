export class TimeUtils {
    static getMMSSStr(time) {
        let m = Math.floor((time / 60 % 60)).toString();
        let s = Math.floor((time % 60)).toString();
        if (m.length == 1)
            m = '0' + m;
        if (s.length == 1)
            s = '0' + s;
        return m + ": " + s;
    }
    static getDateTimeStr(time) {
        let date = new Date(time);
        return date.getMonth() + 1 + '/' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes();
    }
    static getDateStr(time) {
        let date = new Date(time);
        return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZS51dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlRpbWUudXRpbHMudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sT0FBTyxTQUFTO0lBRXJCLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBWTtRQUM3QixJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFBO1FBQy9DLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtRQUMxQyxJQUFJLENBQUMsQ0FBQyxNQUFNLElBQUksQ0FBQztZQUFFLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFBO1FBQzlCLElBQUksQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUUsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUE7UUFDOUIsT0FBTyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNyQixDQUFDO0lBQ0QsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFZO1FBQ2pDLElBQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQTtJQUNwRyxDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFZO1FBQzdCLElBQUksSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ3pCLE9BQU8sSUFBSSxDQUFDLFdBQVcsRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQy9FLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBUaW1lVXRpbHMge1xyXG5cclxuXHRzdGF0aWMgZ2V0TU1TU1N0cih0aW1lOiBudW1iZXIpIHtcclxuXHRcdGxldCBtID0gTWF0aC5mbG9vcigodGltZSAvIDYwICUgNjApKS50b1N0cmluZygpXHJcblx0XHRsZXQgcyA9IE1hdGguZmxvb3IoKHRpbWUgJSA2MCkpLnRvU3RyaW5nKClcclxuXHRcdGlmIChtLmxlbmd0aCA9PSAxKSBtID0gJzAnICsgbVxyXG5cdFx0aWYgKHMubGVuZ3RoID09IDEpIHMgPSAnMCcgKyBzXHJcblx0XHRyZXR1cm4gbSArIFwiOiBcIiArIHM7XHJcblx0fVxyXG5cdHN0YXRpYyBnZXREYXRlVGltZVN0cih0aW1lOiBudW1iZXIpIHtcclxuXHRcdGxldCBkYXRlID0gbmV3IERhdGUodGltZSlcclxuXHRcdHJldHVybiBkYXRlLmdldE1vbnRoKCkgKyAxICsgJy8nICsgZGF0ZS5nZXREYXRlKCkgKyAnICcgKyBkYXRlLmdldEhvdXJzKCkgKyAnOicgKyBkYXRlLmdldE1pbnV0ZXMoKVxyXG5cdH1cclxuXHJcblx0c3RhdGljIGdldERhdGVTdHIodGltZTogbnVtYmVyKSB7XHJcblx0XHRsZXQgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpXHJcblx0XHRyZXR1cm4gZGF0ZS5nZXRGdWxsWWVhcigpICsgJy0nICsgKGRhdGUuZ2V0TW9udGgoKSArIDEpICsgJy0nICsgZGF0ZS5nZXREYXRlKClcclxuXHR9XHJcbn1cclxuIl19